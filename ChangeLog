
161001 Martin Mann :
 - tests/test* : renamed to *_test
 + tests/*_test.cpp : test files for the according classes
 * tests/Makefile : 
   + wildcard based test file listing

160930 Martin Mann :
 * InteractionEnergy* :
   + getRT() : provides the RT constant for this energy model to compute
     Boltzmann weights
 + PredictorMaxProb : computes the interaction site with maximal probability
   and reports the according boundaries and the site's ensemble energy to the
   output handler 
160930 Martin Mann :
 * PredictorMfeRNAup :
   * mfeInteraction base pairs now updated instead of recreation (reduced memory
     allocation events) 
 - PredictorRNAup.* : renamed to PredictorMfeRNAup.*
 + PredictorMfeRNAup.* : rename to be class name conform
 * Makefile.am : adaption to file rename
 * intaRNA : 
   + call CommandLineParsing.getPredictor() to get predictor
 * CommandLineParsing :
   + getPredictor() : generates the predictor according to the user request
160930 Martin Mann :
 * InteractionEnergyVrna :
   * getDangling*() : bugfix : dangling sequence code was not given
 * ReverseAccessibility :
   + getReversedIndex() : get index in reversed sequence
 * Interaction :
   + energy + get/set() : optional energy value for the interaction (init NaN)
 * Predictor :
   * output non-const
   * constructor :
     * output non-const (otherwise no filling possible)
   + predict() : triggers prediction
 - PredictorRNAup : renamed PredictorMfeRNAup
 + PredictorMfeRNAup :
   + mfeInteraction : holds the mfe interaction
   - hybridEmin : now part of mfeInteraction
   + initMfe() : initializes mfe and mfe interaction
   + updateMfe() : updated mfe and mfe interaction
   * fillHybridE() :
     * global temp variables to reduce allocation effort
     + dangling end contribution added
   * constructor() : only initializes data structures, no computation triggered
   + predict() : does the computation and output reporting
   + clear() : clears temporary data structures
   * destructor() : calls now only clear()
   + i1offset : the offset for the first sequence for index handling
   + i2offset : the offset for the second sequence for index handling
 * OutputHandlerText :
   + add() : 
     + prints interaction energy
 * RnaSequence
   + last : placeholder to represent the last position within a sequence
 * intaRNA :
   * calls predictor->predict()
 * AccessibilityVrna :
   * calc_ensemble_free_energy() 
     * input check preprocessor defines corrected

160929 Martin Mann :
 * CommandLineParsing :
   + ReturnCode : enum for different return codes for parsing
   - parsingResultNotSet : obsolete (covered by ReturnCode)
   * adaption to ReturnCode usage
 * intaRNA :
   * adaption to ReturnCode
   + PredictorRNAup temporarily hard-coded
 + unit tests added using Catch header library
   * configure.ac : 
     + generate tests/Makefile
     + AM_EXTRA_RECURSIVE_TARGETS([tests]) : recursive "tests" make target
     * AM_INIT_AUTOMAKE([1.13]) : need v1.13 for AM_EXTRA_RECURSIVE_TARGETS
   * Makefile.am :
     + go to subdir 'tests' for 'tests' make directive only
   + tests/Makefile.am : compile and run tests 
   + catch.hpp : Catch library version 1.5.7
   + tests/runTests.cpp : central test program
   + tests/testInteractionEnergy.cpp 
   + tests/testInteractionEnergyBasePair.cpp 
   + tests/testRnaSequence.cpp
 * RnaSequence :
   + areComplementary() : tests for base pair complementarity
   * constructor : input checks in debug mode
 * Accessibility + subclasses :
   * constructor : accConstraint now pointer to enable NULL argument
 * CommandLineParsing :
   * argument docu extended
   * adaption to Accessibility interface change
   + energy argument added
   + validate_energy()
 * InteractionEnergy :
   * energy getters now const
   * isAllowedLoopRegion() 
     * now public
     * bugfix of maxInternalLoppSize check 
   + getMaxInternalLoopSize*() to access individual max internal loop size
   + isValidInternalLoop() : checks an internal loop request
 * InteractionEnergyVrna :
   * energy getters : bugfix normalization dcal to kcal
   * interface adaption
   * getInterLoopE() : 
   * getDanglingLeft() : 
   * getDanglingRight() : 
     * bugfix of sequence access
 * InteractionEnergyBasePair :
   * interface adaption
 * PredictorRNAup :
   * E2dMatrix : now quadratic matrix for interaction widths w1,w2
   * E4dMatrix : now quadratic matrix for interaction starts i1,i2
   + hybridEmin : global minimal energy value computed
   * (de/con)structor : matrix deletion/initialization adapted
   * fillHybridE() :
     + two round computation: first hybridizations only, than ED values added

160928 Martin Mann :
 * AccessibilityVrna :
   + fillByConstraints() : intarna-1 way of computing ED values
   + fillByRNAup() : RNAup-like ED value computation
   + fillByRNAplfold() : RNAplfold-like ED value computation
   * remaining interface adapted to local computation and data structures
   * using boost::banded_matrix for ED storage
   * constructor() :
     + ED setup depends on whether or not structure constraint present
   * getPfScale() : bugfix : now use global accessibility constraint for 
     mfe/ensemble energy computation
   * Accessibility member access now via getter
   * adaption to possibly empty accConstraint
 * Accessibility :
   * constructor() : accConstraint now empty if not provided to reduce memory
   * checkIndices() : checks only in DEBUG mode enabled
 * CommandLineParsing :
   * cleanup 
 * intaRNA :
   * adaption to parse return value change
 * InteractionEnergyVrna :
   * destructor : bugfix : has to use 'free' for VRNA cleanup
 * VrnaHandler :
   + getRT() : computes the RT constant for the current temperature
 * configure.ac :
   * VRNA check extended
 + PredictorRNAup : RNAup-like interaction prediction
 * Makefile.am : adaption to source file changes
 * configure.ac :
   + additional check for "-std=c++11" support of the compiler
 * InteractioNEnergy :
   + getAccessibility* : access to full accessibility objects
   - getLength* : obsolete

160927 Martin Mann :
 + AccessibilityVrna : vrna-based accessibility computation 
   (former AccessibilityVienna)
 + InteractionEnergy : former Energy
 + InteractionEnergyBasePair : former EnergyBasePair
 + InteractionEnergyVrna : former EnergyVienna
 - AccessibilityVienna : renamed 
 - Energy : renamed
 - EnergyBasePair : renamed
 - EnergyVienna : renamed
 * Accessibility :
   + ostream operator : prints ED values
 * AccessibilityVrna :
   - modelDetails : obsolete
 * RnaSequence :
   + ostream operator : prints "ID(Sequence)"
 + VrnaHandler : central handler for VRNA folding parameter setup
   * model generation now done in constructor
   * model access non-const due to VRNA interface ("features" on the fly 
     initialization of model if not initialized yet, thus non-const)
 * CommandLineParsing : 
   + vrnaHandler
   + getTemperature() : getter for user defined temperature
   * adaption to renames
 

160923 Martin Mann :
 * .travis :
   * sudo: true (was false)

160922 Martin Mann :
############### MOVE FROM CVS TO GIT INTARNA REPO ############################
 * README : 
   + compilation information
   + refers to README.md
 + README.md (by Björn Grüning)
 * COPYING : refers to LICENSE
 + LICENSE : now MIT license for intarna 2.*
 * configure.ac : replaced by new version for intarna 2.*
 .travis.yml : updated to Vienna 2.2.10 usage 
 + m4/m4_ax_boost_base.m4 : boost m4 checks for configure.ac usage
 + autotools-init.sh : calls autotools to generate system specific files
   ==> NOTE : CALL AFTER CHECKOUT <==
 - depcomp : temporary autotools file generated by 'bash autotools-init.sh'
 - install-sh : temporary autotools file generated by 'bash autotools-init.sh'
 - configure : temporary autotools file generated by 'bash autotools-init.sh'
 - missing : temporary autotools file generated by 'bash autotools-init.sh'
 - Makefile.in : temporary autotools file generated by 'bash autotools-init.sh'
 - aclocal.m4 : temporary autotools file generated by 'bash autotools-init.sh'
 - src/*.h : old source removed
 - src/*.c* : old source removed
 - src/data/ : old energy data removed
 + src/*.h : new source data for version 2.*
 + src/*.cpp : new source data for version 2.*
 * src/Makefile.am : updated for new source files

160921 Martin Mann :
 * RnaSequence.h : documentation corrected
 * CommandLineParsing :
   + validateSequenceAlphabet() : checks 
     + sequence alphabet check
     + ambiguity check for warning
   * parseSequences() :
     + validateSequenceAlphabet() call

150616 Martin Mann
 * CommandLineParsing :
   * parse() 
     + check for minimal sequence length (>= seedMinBP)

140719 Martin Mann
 * EnergyBasePair : 
   * getInterLoopE() : BUGFIX : was returning loop energy instead of negated 
     base pair number only

140716 Martin Mann
 + OutputHandlerText : prints reported interaction in a simple text format to
   stream similar to IntaRNA 1.* output
   
140714 Martin Mann
 * general : 
   + CHECKNOTNULL macro to throw an exception with message if a given pointer is
     not initialized
 + Predictor : general interaction prediction interface
 + Interaction : interaction information container to be filled by predictors 
   and to be handled by output handlers
 + OutputHandler : general interaction reporting handler interface

140703 Martin Mann
 * Accessibility* :
   + global accessibility constraint support (some sequence positions have to be
     unstructured both in structure ensemble and interaction and are thus 
     omitted from interaction prediction via ED_UPPER_BOUND accessibility 
     values)
 * CommandLineParsing :
   + *AccConst : parameter + checks for accessibility constraints
   + validateSequenceNumber() : sequence number check (for depending parameters)

140701 Martin Mann
 * intaRNA :
   + general computation setup started
 * general :
   + CLEANUP : macro to delete a pointer and to set it to NULL
 * CommandLineParsing :
   + CharParameter : ensures a char parameter is from a given alphabet
   + validate_charArgument() : generic check function
   + validate_numberArgument() : generic check function
   + several parameters including check functions, defaults, etc.
   + get*Accessibility() : generates an Accessibility object according to the 
     user parameters
   + getEnergyHandler() : generates an Energy object according to the parameters
 * ReverseAccessibility :
   + access to original sequence and accessibility object
 * RnaSequence :
   + ambiguity check

140630 Martin Mann
 + ReverseAccessibility : reversed index access to a sequence and its 
   accessibility (ED) values as needed for the energy computation
 * AccessibilityVienna :
   * Vienna RNA package calls corrected
   + partFoldParams : central partition function folding parameter object 
 + Energy : abstract interface to compute energy contributions
   + getDangling*() : dangling end penalties
 + EnergyBasePair : energy computation in terms of number of base pairs
 + EnergyVienna : energy computation via Vienna RNA package

140627 Martin Mann
 * Accessibility* :
   + maxLength : maximal length of accessible regions to consider, defaults to 
     the sequence's length
 + E_type : global type for energy variables/values
 + T_type : global type for temperature variables/values
 + E_MAX : constant : maximal value for energies

140625 Martin Mann
 * configure :
   + Vienna RNA package v2.* path support and checks
 + Accessibility : abstract interface to get accessibility energies for regions
 + AccessibilityNone : Accessibility implementation that always returns zero
 + AccessibilityVienna : Accessibility implementation that computes _all_ ED 
   values based on ensemble energies computed via the Vienna RNA package
 * RnaSequence :
   + as* : access functions for different sequence encodings

140624 Martin Mann
 + general.h :
   + macro to stop at unimplemented source code locations via std::runtime_error 
 + RnaSequence : class that represents an RNA sequence with according 
   functionality
   + integer encoding
   + string validation
 * CommandLineParser :
   + query and target : 
     + support for direct sequence input
     + preparation for stream/file parsing

140618 Martin Mann
 + cygwin boost installation using
     ./b2 --prefix=/cygdrive/c/Research/Software/boost/1.55.0  --layout=tagged
        --without-python --without-mpi --without-context threading=single 
        link=static variant=release install
 + src/CommandLineParsing : class that handles command line argument parsing
   and checking via boost::program_options
   NOTE: under cygwin a boost build from source is needed to get the libraries
         correctly compiled and linkable (boost lib from cygwin repos is not
         working)

140617 Martin Mann
 + autoconf setup

140617 ********  start reimplementation of IntaRNA in CVS  ******************


#############################################################################

2011-06-10 Andreas Richter      version 1.2.5
   * fixed bug in string clearing when option -v is used and no
     significant interactions are found
   * fixed bug in parameter checking

2011-03-24 Andreas Richter      version 1.2.4
   * changes in error messages

2010-08-13 Andreas Richter	version 1.2.3
   * fixed bug in computation of C matrix for parameter -n

2009-10-08 Andreas Richter
   * added support for ambiguous nucleotide(s) "N"

2009-09-11 Andreas Richter      version 1.2.2
   * fixed bug in automated setting the maximal length of unpaired region in
     target

2009-09-07 Andreas Richter
   * fixed bug in range check for parameter -w (disallow values <3)
   * fixed bugs in calculation of ED values of target RNA and binding RNA with
     RNAplfold and RNAup, respectively, concerning pf_scale for RNAplfold and in
     combination with values 0 for parameter -a/-b (weights for ED values) 

2009-06-11 Andreas Richter
   * threshold for seed accessibility added as EXPERIMENTAL FEATURE

2009-06-11 Andreas Richter      version 1.2.1
   * fixed bug of wrong seed region positions when options -f, -m and -t are used together
   * fixed bug in range check of parameter -f

2009-05-29 Andreas Richter
   * weight for ED values of target RNA and binding RNA in energy added

2009-02-23 Andreas Richter      version 1.2
   * new default parameters (-p 6, -U, -P)
   * ED calculation of target RNA now by new RNAplfold of Vienna Package 1.8.x

2008-12-10 Andreas Richter      version 1.1.1
   * ED calculation of small RNA by RNAup (-U option) added

2008-10-31 Anke Busch           version 1.1
   * bug in ED calculation of small RNA fixed

2008-10-24 Andreas Richter
   * bug in calculation of suboptimal solutions fixed

2008-10-02 Andreas Richter
   * new parameter -f that allows to defined search region for seed
   * more efficient calculation of matrices
   * minor bug in dangling end contributions fixed

2008-09-03 Andreas Richter
   * temperature-dependent calculation of interaction implemented

2008-08-04 Andreas Richter
   * intermolecular initiation free energy added

2008-07-16 Andreas Richter
   * complete approach without heuristic (-n option) added

2008-07-11 Andreas Richter
   * seed calculation corrected (C matrix indices)

2008-07-08  Andreas Richter
   * dangling end energy contributions corrected

2008-07-03  Andreas Richter
   * integrity check for -u parameter added
   
2008-06-11  Anke Busch          version 1.0.0
