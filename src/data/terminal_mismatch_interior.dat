// Terminal mismatch stacking energies (interior loops) from mfold Version 3.0 (Mathews,Sabina, Zuker & Turner:JMB1999)
// Data Arangement: 
//                 Y           
//         ------------------  
//     (X)  A    C    G    U   
//         ------------------  
//             5' ==> 3'       
//           (*64)AX(*16)           
//            (*4)AY(*1) 
//             3' <== 5'       
//     (A)   .     .     .     .   
//     (C)   .     .     .     .   
//     (G)   .     .     .     .   
//     (U) -0.70 -0.10 -0.70 -0.10 
// 
// -------------------------------- 
// STACKING ENERGIES : TERMINAL MISMATCHES AND BASE-PAIRS
//
// A=0 , C=1 , G=2 , U=3
// matrix coordinates = 64*(1)+16*(2)+4*(3)+(4)

double mismatch_energies_interior[]=
{
//              Y                           Y                           Y                          Y 
//  --------------------------  --------------------------  --------------------------  --------------------------   
//    A      C      G      U      A      C      G      U      A      C      G      U      A      C      G      U  
//  --------------------------  --------------------------  --------------------------  --------------------------   
//           5' --> 3'                   5' --> 3'                   5' --> 3'                   5' --> 3'     
//              AX                          AX                          AX                          AX 
//              AY                          CY                          GY                          UY 
//          3' <-- 5'                    3' <-- 5'                   3' <-- 5'                   3' <-- 5'   
     0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.70,  0.70, -0.40,  0.70, 
     0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.70,  0.70,  0.70,  0.70, 
     0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0, -0.40,  0.70,  0.70,  0.70, 
     0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,  0.70,  0.70,  0.70,  0.00, 
//              Y                           Y                           Y                           Y 
//  --------------------------  --------------------------  --------------------------  --------------------------   
//    A      C      G      U      A      C      G      U      A      C      G      U      A      C      G      U  
//  --------------------------  --------------------------  --------------------------  --------------------------   
//           5' --> 3'                   5' --> 3'                   5' --> 3'                   5' --> 3'     
//              CX                          CX                          CX                          CX 
//              AY                          CY                          GY                          UY 
//           3' <-- 5'                   3' <-- 5'                   3' <-- 5'                   3' <-- 5'   
     0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0, -0.00, -0.00, -1.10, -0.00,   0.0,   0.0,   0.0,   0.0,  
     0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0, -0.00, -0.00, -0.00, -0.00,   0.0,   0.0,   0.0,   0.0, 
     0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0, -1.10, -0.00, -0.00, -0.00,   0.0,   0.0,   0.0,   0.0,  
     0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0, -0.00, -0.00, -0.00, -0.70,   0.0,   0.0,   0.0,   0.0, 
//              Y                           Y                           Y                           Y 
//  --------------------------  --------------------------  --------------------------  --------------------------   
//    A      C      G      U      A      C      G      U      A      C      G      U      A      C      G      U  
//  --------------------------  --------------------------  --------------------------  --------------------------   
//           5' --> 3'                   5' --> 3'                   5' --> 3'                   5' --> 3'     
//              GX                          GX                          GX                          GX 
//              AY                          CY                          GY                          UY 
//           3' <-- 5'                   3' <-- 5'                   3' <-- 5'                   3' <-- 5'   
     0.0,   0.0,   0.0,   0.0, -0.00, -0.00, -1.10, -0.00,   0.0,   0.0,   0.0,   0.0,  0.70,  0.70, -0.40,  0.70, 
     0.0,   0.0,   0.0,   0.0, -0.00, -0.00, -0.00, -0.00,   0.0,   0.0,   0.0,   0.0,  0.70,  0.70,  0.70,  0.70, 
     0.0,   0.0,   0.0,   0.0, -1.10, -0.00, -0.00, -0.00,   0.0,   0.0,   0.0,   0.0, -0.40,  0.70,  0.70,  0.70, 
     0.0,   0.0,   0.0,   0.0, -0.00, -0.00, -0.00, -0.70,   0.0,   0.0,   0.0,   0.0,  0.70,  0.70,  0.70,  0.00, 
//              Y                           Y                           Y                           Y 
//  --------------------------  --------------------------  --------------------------  --------------------------   
//    A      C      G      U      A      C      G      U      A      C      G      U      A      C      G      U  
//  --------------------------  --------------------------  --------------------------  --------------------------   
//           5' --> 3'                   5' --> 3'                   5' --> 3'                   5' --> 3'     
//              UX                          UX                          UX                          UX 
//              AY                          CY                          GY                          UY 
//           3' <-- 5'                   3' <-- 5'                   3' <-- 5'                   3' <-- 5'   
    0.70,  0.70, -0.40,  0.70,   0.0,   0.0,   0.0,   0.0,  0.70,  0.70, -0.40,  0.70,   0.0,   0.0,   0.0,   0.0,  
    0.70,  0.70,  0.70,  0.70,   0.0,   0.0,   0.0,   0.0,  0.70,  0.70,  0.70,  0.70,   0.0,   0.0,   0.0,   0.0, 
   -0.40,  0.70,  0.70,  0.70,   0.0,   0.0,   0.0,   0.0, -0.40,  0.70,  0.70,  0.70,   0.0,   0.0,   0.0,   0.0,  
    0.70,  0.70,  0.70,  0.00,   0.0,   0.0,   0.0,   0.0,  0.70,  0.70,  0.70,  0.00,   0.0,   0.0,   0.0,   0.0 
};    

